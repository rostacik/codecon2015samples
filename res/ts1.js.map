{"version":3,"sources":["ts1.js","ts1.ts"],"names":["demoModule","demoModule.getOnionCountAsync","demoModule.theOnionCase","demoModule.theOnionCaseWhileLoop","demoModule.getConfirmAsync","demoModule.consumeGetConfirmAsync","demoModule.getConfirmAsyncNoPromise","demoModule.consumeGetConfirmAsyncNoPromise","demoModule.getJSONAsync","handler","demoModule.fixResponse","demoModule.promiseAllSample","demoModule.sameObjectMoreThens","demoModule.chainedThen","demoModule.getConfirmThrowingAsync","demoModule.tryCatchAsyncFn","demoModule.simplePromise","demoModule.simpleAwait","demoModule.simpleAwaitWithProp","demoModule.returnStringAsync","demoModule.consumeStringAsync"],"mappings":"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","file":"ts1.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar demoModule;\n(function (demoModule) {\n    \"use strict\";\n    function getOnionCountAsync() {\n        return __awaiter(this, void 0, Promise, function* () {\n            var promise = new Promise(function (resolve, reject) {\n                setTimeout(() => {\n                    resolve(Math.floor((Math.random() * 10) + 1));\n                }, 2000);\n            });\n            return promise;\n        });\n    }\n    demoModule.getOnionCountAsync = getOnionCountAsync;\n    function theOnionCase() {\n        return __awaiter(this, void 0, Promise, function* () {\n            console.log(\"je cibula v byte?\");\n            let res = yield getOnionCountAsync();\n            console.log(\"cibula count : \" + res);\n        });\n    }\n    demoModule.theOnionCase = theOnionCase;\n    function theOnionCaseWhileLoop() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res;\n            do {\n                console.log(\"je cibula v byte?\");\n                res = yield getOnionCountAsync();\n                console.log(\"cibula count : \" + res);\n                if (res <= 4) {\n                    console.log(\"BOHA!!!!\");\n                }\n                else {\n                    console.log(\"ech, no dobre\");\n                }\n            } while (res <= 4);\n        });\n    }\n    demoModule.theOnionCaseWhileLoop = theOnionCaseWhileLoop;\n    function getConfirmAsync(message) {\n        var promise = new Promise(function (resolve, reject) {\n            let res = confirm(message);\n            resolve(res);\n        });\n        return promise;\n    }\n    demoModule.getConfirmAsync = getConfirmAsync;\n    function consumeGetConfirmAsync() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res = yield getConfirmAsync(\"please pick yes/no\");\n            console.log(res);\n        });\n    }\n    demoModule.consumeGetConfirmAsync = consumeGetConfirmAsync;\n    function getConfirmAsyncNoPromise(message) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return confirm(message);\n        });\n    }\n    demoModule.getConfirmAsyncNoPromise = getConfirmAsyncNoPromise;\n    function consumeGetConfirmAsyncNoPromise() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res = yield getConfirmAsyncNoPromise(\"please pick yes/no\");\n            console.log(res);\n        });\n    }\n    demoModule.consumeGetConfirmAsyncNoPromise = consumeGetConfirmAsyncNoPromise;\n    function getJSONAsync(url) {\n        var promise = new Promise(function (resolve, reject) {\n            var client = new XMLHttpRequest();\n            client.open(\"GET\", url);\n            client.onreadystatechange = handler;\n            client.responseType = \"json\";\n            client.setRequestHeader(\"Accept\", \"application/json\");\n            client.send();\n            function handler() {\n                if (this.readyState === this.DONE) {\n                    if (this.status === 200) {\n                        if (this.response) {\n                            resolve(fixResponse(this.response));\n                        }\n                        else if (this.responseText) {\n                            resolve(fixResponse(this.responseText));\n                        }\n                    }\n                    else {\n                        reject(this);\n                    }\n                }\n            }\n            ;\n        });\n        return promise;\n    }\n    demoModule.getJSONAsync = getJSONAsync;\n    function fixResponse(response) {\n        if (response) {\n            let res;\n            if (typeof response === \"string\") {\n                try {\n                    res = JSON.parse(response);\n                }\n                catch (e) {\n                    res = response;\n                }\n                finally {\n                    return res;\n                }\n            }\n            else {\n                return response;\n            }\n        }\n    }\n    function promiseAllSample() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res = yield Promise.all([\n                getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/297345.json?language=en&apikey=meSocYcloNe\"),\n                getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/2-298738_1_AL.json?language=en&apikey=meSocYcloNe\"),\n                getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/2-301459_1_AL.json?language=en&apikey=meSocYcloNe\"),\n                getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/297124.json?language=en&apikey=meSocYcloNe\")\n            ]);\n            res.forEach((value) => {\n                let val;\n                if (Array.isArray(value)) {\n                    val = value;\n                }\n                else {\n                    val = JSON.parse(value);\n                }\n                console.log(\"Weather conditions : \" + val[0].WeatherText + \" with \" + val[0].Temperature.Metric.Value + val[0].Temperature.Metric.Unit);\n            });\n        });\n    }\n    demoModule.promiseAllSample = promiseAllSample;\n    function sameObjectMoreThens() {\n        var promise;\n        promise = new Promise((resolve, reject) => {\n            let res = confirm(\"abcd\");\n            resolve(res);\n        });\n        promise.then((value) => {\n            console.log(\"from first then\");\n            console.log(value);\n        }, (reason) => {\n            console.log(\"from first reject\");\n            console.log(reason);\n        });\n        promise.then((value) => {\n            console.log(\"from second then\");\n            console.log(value);\n        }, (reason) => {\n            console.log(\"from second reject\");\n            console.log(reason);\n        });\n        promise.then((value) => {\n            console.log(\"from third then\");\n            console.log(value);\n        }, (reason) => {\n            console.log(\"from third reject\");\n            console.log(reason);\n        });\n    }\n    demoModule.sameObjectMoreThens = sameObjectMoreThens;\n    function chainedThen() {\n        var promise;\n        promise = new Promise((resolve, reject) => {\n            let res = confirm(\"abcd\");\n            resolve(res);\n        });\n        promise.then((value) => {\n            console.log(\"from first then\");\n            console.log(value);\n            return Promise.resolve(\"abcd\");\n        }, (reason) => {\n            console.log(\"from first reject\");\n            console.log(reason);\n        }).then((value) => {\n            console.log(\"from second then\");\n            console.log(value);\n            return Promise.resolve(123);\n        }, (reason) => {\n            console.log(\"from second reject\");\n            console.log(reason);\n        }).then((value) => {\n            console.log(\"from third then\");\n            console.log(value);\n        }, (reason) => {\n            console.log(\"from third reject\");\n            console.log(reason);\n        });\n    }\n    demoModule.chainedThen = chainedThen;\n    function getConfirmThrowingAsync(message) {\n        var promise = new Promise(function (resolve, reject) {\n            let res = confirm(message);\n            if (res) {\n                resolve(res);\n            }\n            else {\n                reject(\"rejected, because user returned no\");\n            }\n        });\n        return promise;\n    }\n    demoModule.getConfirmThrowingAsync = getConfirmThrowingAsync;\n    function tryCatchAsyncFn() {\n        return __awaiter(this, void 0, Promise, function* () {\n            try {\n                let res = yield getConfirmThrowingAsync(\"je cibula v byte?\");\n                console.log(\"cibula vraj v byte JE : \" + res);\n            }\n            catch (error) {\n                console.log(\"cibula vraj v byte NIEJE : \" + error);\n            }\n        });\n    }\n    demoModule.tryCatchAsyncFn = tryCatchAsyncFn;\n    function simplePromise() {\n        let promise = new Promise((resolve, reject) => {\n            let res = confirm(\"abcd\");\n            resolve(res);\n        }).then((result) => {\n            console.log(result);\n        }, (error) => {\n            console.log(error);\n        });\n    }\n    demoModule.simplePromise = simplePromise;\n    function simpleAwait() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res = yield getConfirmAsync(\"abcd\");\n            console.log(res);\n        });\n    }\n    demoModule.simpleAwait = simpleAwait;\n    function simpleAwaitWithProp() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let gca = getConfirmAsync(\"abcd\");\n            let res = yield gca;\n            console.log(res);\n        });\n    }\n    demoModule.simpleAwaitWithProp = simpleAwaitWithProp;\n    function returnStringAsync() {\n        return __awaiter(this, void 0, Promise, function* () {\n            return \"abcd\";\n        });\n    }\n    demoModule.returnStringAsync = returnStringAsync;\n    function consumeStringAsync() {\n        return __awaiter(this, void 0, Promise, function* () {\n            let res = yield returnStringAsync();\n            console.log(res);\n        });\n    }\n    demoModule.consumeStringAsync = consumeStringAsync;\n})(demoModule || (demoModule = {}));\n","module demoModule {\r\n\t\"use strict\";\r\n    \r\n    export async function getOnionCountAsync(): Promise<number> {\r\n        var promise = new Promise(function (resolve: (value: number) => void, reject: (reason: any) => void) {\r\n            setTimeout(()=>{\r\n                resolve(Math.floor((Math.random() * 10) + 1));}, 2000);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n    \r\n    export async function theOnionCase(): Promise<void> {\r\n        console.log(\"je cibula v byte?\");\r\n            \r\n        let res: number = await getOnionCountAsync();\r\n            \r\n        console.log(\"cibula count : \" + res);\r\n    }\r\n    \r\n    export async function theOnionCaseWhileLoop(): Promise<void> {\r\n        let res: number;\r\n        \r\n        do {\r\n            console.log(\"je cibula v byte?\");\r\n            \r\n            res = await getOnionCountAsync();\r\n            \r\n            console.log(\"cibula count : \" + res);\r\n            \r\n            if (res <= 4) {\r\n                console.log(\"BOHA!!!!\");\r\n            } else {\r\n                console.log(\"ech, no dobre\");\r\n            }\r\n        } while (res <= 4)\r\n    }\r\n    \r\n\t/**\r\n    * async version of confirm dialog in the browser\r\n    */\r\n    export function getConfirmAsync(message: string): Promise<boolean> {\r\n        var promise = new Promise(function (resolve: (value: boolean) => void, reject: (reason: any) => void) {\r\n            let res: boolean = confirm(message);\r\n\r\n            resolve(res);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n    \r\n    /**\r\n     * consume getConfirmAsync\r\n     */\r\n    export async function consumeGetConfirmAsync(): Promise<void> {\r\n        let res = await getConfirmAsync(\"please pick yes/no\");\r\n        \r\n        console.log(res);\r\n    }\r\n    \r\n    /**\r\n     * same as getConfirmAsync but without promise\r\n     */\r\n    export async function getConfirmAsyncNoPromise(message: string): Promise<boolean> {\r\n        return confirm(message);\r\n    }\r\n    \r\n    /**\r\n     * consuming getConfirmAsyncNoPromise with same result as consumeGetConfirmAsync\r\n     */\r\n    export async function consumeGetConfirmAsyncNoPromise(): Promise<void> {\r\n        let res: boolean = await getConfirmAsyncNoPromise(\"please pick yes/no\");\r\n        \r\n        console.log(res);\r\n    }\r\n\r\n\t/**\r\n    * generic async version of get JSON AJAX call\r\n    */\r\n    export function getJSONAsync(url: string): Promise<any> {\r\n        var promise = new Promise(function (resolve: (value: any) => void, reject: (reason: any) => void) {\r\n            var client = new XMLHttpRequest();\r\n            client.open(\"GET\", url);\r\n            client.onreadystatechange = handler;\r\n            client.responseType = \"json\";\r\n            client.setRequestHeader(\"Accept\", \"application/json\");\r\n            client.send();\r\n\r\n            function handler() {\r\n                if (this.readyState === this.DONE) {\r\n                    if (this.status === 200) {\r\n                        if (this.response) { //latest browsers\r\n                            resolve(fixResponse(this.response));\r\n                        } else if (this.responseText) { //IE9\r\n                            resolve(fixResponse(this.responseText));\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(this);\r\n                    }\r\n                }\r\n            };\r\n        });\r\n\r\n        return promise;\r\n    }\r\n    \r\n    /**\r\n     * \"internal\" function to fix response type for IE\r\n     */\r\n    function fixResponse(response: any): any {\r\n        if (response) {\r\n            let res: any;\r\n            \r\n            if (typeof response === \"string\") {\r\n                try {\r\n                    res = JSON.parse(response);\r\n                } catch(e) {\r\n                    res = response;\r\n                } finally {\r\n                    return res;\r\n                }\r\n            } else {\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Promise.all sample function\r\n     */\r\n    export async function promiseAllSample(): Promise<void> {\r\n        let res = await Promise.all<string>([\r\n            getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/297345.json?language=en&apikey=meSocYcloNe\"),\r\n            getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/2-298738_1_AL.json?language=en&apikey=meSocYcloNe\"),\r\n            getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/2-301459_1_AL.json?language=en&apikey=meSocYcloNe\"),\r\n            getJSONAsync(\"http://apidev.accuweather.com/currentconditions/v1/297124.json?language=en&apikey=meSocYcloNe\")\r\n        ]);\r\n\r\n        res.forEach((value: any) => {\r\n            let val: any;\r\n            \r\n            if (Array.isArray(value)) {\r\n                val = value;\r\n            } else {\r\n                val = JSON.parse(value);\r\n            }\r\n            \r\n            console.log(\"Weather conditions : \" + val[0].WeatherText + \" with \"+ val[0].Temperature.Metric.Value + val[0].Temperature.Metric.Unit);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * sample function with then hooked on first promise object\r\n     */\r\n    export function sameObjectMoreThens(): void {\r\n        var promise: Promise<boolean>;\r\n        \r\n        promise = new Promise((resolve: (value: boolean) => void, reject: (reason: any) => void) => {\r\n            let res: boolean = confirm(\"abcd\");\r\n\r\n            resolve(res);\r\n        });\r\n\r\n        promise.then((value: boolean) => {\r\n            console.log(\"from first then\");\r\n            console.log(value);\r\n        }, (reason: any) => {\r\n            console.log(\"from first reject\");\r\n            console.log(reason);\r\n        });\r\n        \r\n        promise.then((value: boolean) => {\r\n            console.log(\"from second then\");\r\n            console.log(value);\r\n        }, (reason: any) => {\r\n            console.log(\"from second reject\");\r\n            console.log(reason);\r\n        });\r\n        \r\n        promise.then((value: boolean) => {\r\n            console.log(\"from third then\");\r\n            console.log(value);\r\n        }, (reason: any) => {\r\n            console.log(\"from third reject\");\r\n            console.log(reason);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * sample function where each then resolves with completely new Promise object\r\n     */\r\n    export function chainedThen(): void {\r\n        var promise: Promise<boolean>;\r\n        \r\n        promise = new Promise((resolve: (value: boolean) => void, reject: (reason: any) => void) => {\r\n            let res: boolean = confirm(\"abcd\");\r\n\r\n            resolve(res);\r\n        });\r\n\r\n        promise.then((value: boolean) => {\r\n            console.log(\"from first then\");\r\n            console.log(value);\r\n            \r\n            //returning completely new promise\r\n            return Promise.resolve(\"abcd\");\r\n        },\r\n        (reason: any) => {\r\n            console.log(\"from first reject\");\r\n            console.log(reason);\r\n        }).then((value: string) => {\r\n            console.log(\"from second then\");\r\n            console.log(value);\r\n            \r\n            //returning completely new promise\r\n            return Promise.resolve(123);\r\n        },\r\n        (reason: any) => {\r\n            console.log(\"from second reject\");\r\n            console.log(reason);\r\n        }).then((value: number) => {\r\n            console.log(\"from third then\");\r\n            console.log(value);\r\n        },\r\n        (reason: any) => {\r\n            console.log(\"from third reject\");\r\n            console.log(reason);\r\n        });\r\n    }\r\n    \r\n    /**\r\n    * async version of confirm dialog in the browser\r\n    */\r\n    export function getConfirmThrowingAsync(message: string): Promise<boolean> {\r\n        var promise = new Promise(function (resolve: (value: boolean) => void, reject: (reason: any) => void) {\r\n            let res: boolean = confirm(message);\r\n\r\n            if (res) {\r\n                resolve(res);\r\n            } else {\r\n                reject(\"rejected, because user returned no\");\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n    \r\n    export async function tryCatchAsyncFn(): Promise<void> {\r\n        try {\r\n            let res = await getConfirmThrowingAsync(\"je cibula v byte?\");\r\n            \r\n            console.log(\"cibula vraj v byte JE : \" + res);\r\n        } catch (error) {\r\n            console.log(\"cibula vraj v byte NIEJE : \" + error);\r\n        }\r\n    } \r\n    \r\n    export function simplePromise(): void {\r\n        let promise = new Promise((resolve: (value: boolean) => void, reject: (reason: any) => void) => {\r\n            let res: boolean = confirm(\"abcd\");\r\n\r\n            resolve(res);\r\n        }).then((result: boolean) => {\r\n            console.log(result);\r\n        }, (error: any) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    \r\n    export async function simpleAwait(): Promise<void> {\r\n        let res = await getConfirmAsync(\"abcd\");\r\n        \r\n        console.log(res);\r\n    }\r\n    \r\n    export async function simpleAwaitWithProp(): Promise<void> {\r\n        let gca: Promise<boolean> = getConfirmAsync(\"abcd\");\r\n        \r\n        let res = await gca;\r\n        \r\n        console.log(res);\r\n    }\r\n    \r\n    export async function returnStringAsync(): Promise<string> {\r\n        return \"abcd\";\r\n    }\r\n    \r\n    export async function consumeStringAsync(): Promise<void> {\r\n        let res: string = await returnStringAsync();\r\n        \r\n        console.log(res);\r\n    }\r\n}"],"sourceRoot":"/source/"}